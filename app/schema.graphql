type Query {
  getMeasurements(input: MeasurementQueryInput): [Measurement!]!
    @aws_iam
    @aws_lambda
}

type Mutation {
  postMeasurement(input: MeasurementInput): Measurement!
}

type Subscription {
  onPostMeasurement: Measurement
    @aws_subscribe(mutations: ["postMeasurement"])
    @aws_iam
    @aws_lambda
}

input MeasurementQueryInput {
  roomName: String!
  fromTimestamp: String
  toTimestamp: String
  limit: Int
  period: Int
}

input MeasurementInput {
  roomName: String!
  timestamp: String!
  temperature: Float!
  pressure: Float!
  humidity: Float!
}

type Measurement @aws_iam @aws_lambda {
  roomName: String!
  timestamp: String!
  temperature: Float!
  pressure: Float!
  humidity: Float!
}
